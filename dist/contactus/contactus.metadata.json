{"__symbolic":"module","version":4,"metadata":{"ContactusService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":2,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]},"statics":{"ngInjectableDef":{}}},"DialogData":{"__symbolic":"interface"},"ContactusComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":16,"character":1},"arguments":[{"selector":"lib-contactus","template":"\n  <button *ngIf=\"listingValue != ''\" class=\"listingButton\" mat-raised-button color=\"accent\" (click)=\"goToListing()\">{{listingValue}}</button>\n\n\n<div class=\"main-div\">\n\n    <mat-card class=\"from\">\n        <span class=\"logowrapper\" *ngIf=\"logoImgValue != ''\" >\n            <img  [src]=\"logoImgValue\">\n        </span>\n\n        <h2 *ngIf=\"formTitleValue != ''\" class=\"title\"> {{formTitleValue}}</h2>\n\n        <form class=\"example-container\" [formGroup]=\"contactUsForm\" (ngSubmit)=\"contactUsFormSubmit()\" novalidate>\n\n\n\n\n  <!-- Location Name field start here-->\n  <div class=\"fromClass\">\n  <mat-form-field>\n      <input matInput placeholder=\"Name \" formControlName=\"name\" (blur)=\"inputUntouched('name')\" >\n      <mat-error *ngIf=\"!contactUsForm.controls['name'].valid && contactUsForm.controls['name'].errors.required && contactUsForm.controls['name'].touched\">Name field can not be blank</mat-error>\n    </mat-form-field>\n  </div>\n    <!-- Location Name field end here-->\n  \n  \n  \n    <!--  multiple emails fields added start here-->\n  <div formArrayName=\"multipleemails\"  *ngFor=\"let item of multipleemails.controls; let pointIndex=index\" class=\"fromClass\" >\n  \n  \n    <mat-form-field [formGroupName]=\"pointIndex\">\n  \n  \n  \n      <input matInput placeholder=\"Email \"  formControlName=\"emails\" >\n      <span matSuffix>\n        <i class=\"material-icons\"  (click)=\"addEmail()\">add</i>\n        <i *ngIf=\"pointIndex != 0\" class=\"material-icons\"  (click)=\"removeEmail(pointIndex)\">remove</i>\n  \n      </span>\n     <!-- <mat-error  *ngIf=\"!item.valid && !item.errors.required\">Email is not valid</mat-error> -->\n      <!-- <mat-error *ngIf=\"!item.valid  \">Email field can not be blank</mat-error> -->\n    </mat-form-field>\n  </div>\n    <!--  multiple emails fields added end here-->\n  \n  <!--  multiple Phone fields added start here-->\n  <div formArrayName=\"phones\" *ngFor=\"let item of phones.controls; let pointIndex=index\" class=\"fromClass\">\n  \n    <mat-form-field [formGroupName]=\"pointIndex\">\n  \n  \n      <input matInput placeholder=\"Phone \"  formControlName=\"phone\" (blur)=\"inputUntouched('phone')\">\n  \n      <span matSuffix>\n        <i class=\"material-icons\"  (click)=\"addPhone()\">add</i>\n        <i *ngIf=\"pointIndex != 0\"  class=\"material-icons\"  (click)=\"removePhone(pointIndex)\">remove</i>\n  \n      </span>\n  \n  \n      <!-- <mat-error *ngIf=\"!item.valid  \">Phone field can not be blank</mat-error> -->\n    </mat-form-field>\n  \n  </div>\n  \n    <!--  multiple Phone fields added end here-->\n  \n  <!--  multiple Addresses fields added start here-->\n  <div formArrayName=\"addresses\" *ngFor=\"let item of addresses.controls; let pointIndex=index\"  class=\"fromClass\">\n  \n  \n    <mat-form-field [formGroupName]=\"pointIndex\">\n  \n      <textarea  matInput placeholder=\"Address {{pointIndex + 1}} \"  formControlName=\"address\" (blur)=\"inputUntouched('address')\"></textarea>\n  \n      <span matSuffix>\n        <i class=\"material-icons\"  (click)=\"addAddress()\">add</i>\n        <i *ngIf=\"pointIndex != 0\" class=\"material-icons\"  (click)=\"removeAddress(pointIndex)\">remove</i>\n  \n      </span>\n  \n  <!--    <mat-error  *ngIf=\"!contactUsForm.controls['email'].valid && !contactUsForm.controls['email'].errors.required\">Email is not valid</mat-error>-->\n      <!-- <mat-error *ngIf=\"!item.valid \">Address field can not be blank</mat-error> -->\n  \n    </mat-form-field>\n  </div>\n    <!--  multiple Addresses fields added end here-->\n  \n    <!-- Address field start here-->\n    <!--<mat-form-field>\n      <textarea matInput placeholder=\"Address\" formControlName=\"address\" (blur)=\"inputblur('address')\"></textarea>\n      <mat-error *ngIf=\"!contactUsForm.controls['address'].valid && contactUsForm.controls['address'].errors.required\">Address field can not be blank</mat-error>\n    </mat-form-field>-->\n    <!-- Address field end here-->\n  \n  \n    <!-- Message field start here -->\n    <div class=\"fromClass\">\n    <mat-form-field>\n      <textarea matInput placeholder=\"Message\" formControlName=\"message\" (blur)=\"inputUntouched('message')\"></textarea>\n  <!--    <mat-error *ngIf=\"!contactUsForm.controls['message'].valid && contactUsForm.controls['message'].errors.required\">Message field can not be blank</mat-error>-->\n    </mat-form-field>\n  </div>\n    <!-- Message field end here -->\n  \n    <button mat-raised-button color=\"primary\">Submit</button>\n\n        </form>\n\n    </mat-card>\n\n</div>","styles":[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.from{width:30%;margin:0 auto}.from h2{text-align:center;background-color:#00f;color:#fff;padding:15px}.from a{padding-right:30px}.from button{width:60px;height:40px;text-align:center;margin:0 auto}.main-div{height:100vh;display:flex;justify-content:center;align-items:center}.signupfooter{margin-top:12px;display:flex;justify-content:space-between;align-items:center}.signupfooter a{cursor:pointer}.error{text-align:center}.fromClass{display:flex;flex-direction:column;width:100%}.logowrapper{margin:0 auto;display:block;text-align:center}"]}]}],"members":{"formDirective":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":25,"character":3},"arguments":[{"__symbolic":"reference","module":"@angular/forms","name":"FormGroupDirective","line":25,"character":13}]}]}],"modaleLogo":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":3}}]}],"formTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":52,"character":3}}]}],"logoimg":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":3}}]}],"addlisting":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":67,"character":3}}]}],"JwtToken":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":76,"character":3}}]}],"serverUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":82,"character":3}}]}],"addEndpoint":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":92,"character":3}}]}],"routeingUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":101,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":116,"character":25},{"__symbolic":"reference","name":"Éµa"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":116,"character":82},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":116,"character":109},{"__symbolic":"reference","module":"ngx-cookie-service","name":"CookieService","line":116,"character":139},{"__symbolic":"reference","module":"@angular/material","name":"MatDialog","line":116,"character":169}]}],"ngOnInit":[{"__symbolic":"method"}],"addEmail":[{"__symbolic":"method"}],"removeEmail":[{"__symbolic":"method"}],"addAddress":[{"__symbolic":"method"}],"removeAddress":[{"__symbolic":"method"}],"addPhone":[{"__symbolic":"method"}],"removePhone":[{"__symbolic":"method"}],"contactUsFormSubmit":[{"__symbolic":"method"}],"inputUntouched":[{"__symbolic":"method"}],"goToListing":[{"__symbolic":"method"}]}},"successModalComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":304,"character":1},"arguments":[{"selector":"successModal","template":"\n  \n<span style=\"text-align: center\"  *ngIf=\"data.Url != ''\" >\n<img style=\"max-width: 100%; text-align: center\" [src]=\"data.Url\">\n</span>\n\n<div mat-dialog-content>\n<p *ngIf=\"data.value.length <= 7\">Thanks! your account has been successfully created</p>\n<p *ngIf=\"data.value.length >= 8\">{{data.value}}</p>\n\n</div>\n<div mat-dialog-actions>\n<button mat-button [mat-dialog-close]=\"\" cdkFocusInitial>Ok</button>\n</div>\n\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":328,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MAT_DIALOG_DATA","line":328,"character":12}]}]],"parameters":[{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material","arguments":[{"__symbolic":"reference","name":"successModalComponent"}]},{"__symbolic":"reference","name":"any"}]}],"onNoClick":[{"__symbolic":"method"}]}},"ContactusModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":16,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ContactusComponent"},{"__symbolic":"reference","name":"successModalComponent"},{"__symbolic":"reference","name":"Éµb"},{"__symbolic":"reference","name":"Éµc"}],"imports":[{"__symbolic":"reference","name":"Éµd"},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"BrowserAnimationsModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":21,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":22,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":23,"character":4},{"__symbolic":"reference","module":"listing-angular7","name":"ListingModule","line":24,"character":4},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":25,"character":4}],"exports":[{"__symbolic":"reference","name":"ContactusComponent"},{"__symbolic":"reference","name":"Éµb"}],"providers":[{"__symbolic":"reference","name":"Éµa"},{"__symbolic":"reference","name":"Éµc"},{"__symbolic":"reference","module":"ngx-cookie-service","name":"CookieService","line":35,"character":44}],"bootstrap":[],"schemas":[{"__symbolic":"reference","module":"@angular/core","name":"CUSTOM_ELEMENTS_SCHEMA","line":37,"character":12}],"entryComponents":[{"__symbolic":"reference","name":"successModalComponent"}]}]}],"members":{}},"Éµa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":8,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":46,"character":29},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":46,"character":29},{"__symbolic":"reference","module":"ngx-cookie-service","name":"CookieService","line":47,"character":57}]}],"setServerUrl":[{"__symbolic":"method"}],"clearServerUrl":[{"__symbolic":"method"}],"getServerUrl":[{"__symbolic":"method"}],"setaddEndpoint":[{"__symbolic":"method"}],"clearaddEndpoint":[{"__symbolic":"method"}],"getaddEndpoint":[{"__symbolic":"method"}],"setuploadEndpont":[{"__symbolic":"method"}],"clearuploadEndpoint":[{"__symbolic":"method"}],"getuploadEndpoint":[{"__symbolic":"method"}],"setupdateEndpoint":[{"__symbolic":"method"}],"clearupdateEndpoint":[{"__symbolic":"method"}],"getupdateEndpoint":[{"__symbolic":"method"}],"setdeletesingleEndpoint":[{"__symbolic":"method"}],"cleardeletesingleEndpoint":[{"__symbolic":"method"}],"getdeletesingleEndpoint":[{"__symbolic":"method"}],"setupdatestatus_singleEndpoint":[{"__symbolic":"method"}],"clearupdatestatus_singleEndpoint":[{"__symbolic":"method"}],"getupdatestatus_singleEndpoint":[{"__symbolic":"method"}],"setgetdataEndpoint":[{"__symbolic":"method"}],"cleargetdataEndpoint":[{"__symbolic":"method"}],"getdataEndpoint":[{"__symbolic":"method"}],"isTokenExpired":[{"__symbolic":"method"}],"addData":[{"__symbolic":"method"}],"uploadFile":[{"__symbolic":"method"}],"UpdateData":[{"__symbolic":"method"}],"getData":[{"__symbolic":"method"}],"deleteSingleData":[{"__symbolic":"method"}],"deleteMultipleData":[{"__symbolic":"method"}],"UpdateStatusForSingleData":[{"__symbolic":"method"}],"UpdateStatusForMultipleData":[{"__symbolic":"method"}],"CustomRequest":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"Éµb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"lib-contactus-listing","template":"\n\n        <h2 class=\"title\" *ngIf=\"formTitleValue != ''\" class=\"title\"> {{formTitleValue}}</h2>\n\n<lib-listing class=\"formfilterdiv formfilterdivnew\" *ngIf=\"contactUsAllData.length>0 && contactUsAllData != null\"\n             [datasource]=\"contactUsAllData\"\n             [skip]=\"contactUsAllDataHeaderSkipValue\"\n             [modify_header_array]=\"contactUsAllDataModifyHeaderValue\"\n             [sourcedata]=\"contactUsAllData_collection\"\n             [updateendpoint]=\"updateendpointData\"\n             [apiurl]=\"serverURL\"\n             [sourcedata]=\"deleteendpointData.source\"\n             [jwttoken]=\"apiService.accesstoken\"\n             [deleteendpoint]=\"deleteendpointData.endpoint\">\n</lib-listing>\n\n","styles":[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.fromClass{display:flex;flex-direction:column;width:100%}.example-radio-group{display:flex;flex-direction:column;margin:15px 0}.example-radio-button{margin:5px}.agm-map{height:300px}.form-mat-card{margin-bottom:0;padding:5px}.title{padding:10px;text-align:center;background-color:#00f;color:#f0f8ff}"]}]}],"members":{"formTitle":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":29,"character":3}}]}],"serverUrl":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"contactUsAllDataHeader_skip":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":44,"character":3}}]}],"contactUsAllDataModify_header":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":52,"character":3}}]}],"addEndpoint":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":62,"character":3}}]}],"getDataEndpoint":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":70,"character":3}}]}],"updateendpoint":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":78,"character":3}}]}],"deleteendpoint":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":86,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"Éµa"},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":97,"character":58},{"__symbolic":"reference","name":"Éµc"},{"__symbolic":"reference","module":"@angular/material","name":"MatDialog","line":98,"character":63}]}],"ngOnInit":[{"__symbolic":"method"}],"getAllData":[{"__symbolic":"method"}]}},"Éµc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"lib-loading","template":"\n\n\n\n<div style=\"width:100vw; height:100vh; display:table-cell; vertical-align:middle; text-align:center;\" *ngIf=\"loading==true\">\n  <mat-spinner></mat-spinner>\n</div>","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":10,"character":30}]}],"ngOnInit":[{"__symbolic":"method"}]}},"Éµd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":43,"character":1},"arguments":[{"exports":[{"__symbolic":"reference","module":"@angular/cdk/a11y","name":"A11yModule","line":45,"character":4},{"__symbolic":"reference","module":"@angular/cdk/stepper","name":"CdkStepperModule","line":46,"character":4},{"__symbolic":"reference","module":"@angular/cdk/table","name":"CdkTableModule","line":47,"character":4},{"__symbolic":"reference","module":"@angular/cdk/tree","name":"CdkTreeModule","line":48,"character":4},{"__symbolic":"reference","module":"@angular/cdk/drag-drop","name":"DragDropModule","line":49,"character":4},{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteModule","line":50,"character":4},{"__symbolic":"reference","module":"@angular/material/badge","name":"MatBadgeModule","line":51,"character":4},{"__symbolic":"reference","module":"@angular/material/bottom-sheet","name":"MatBottomSheetModule","line":52,"character":4},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":53,"character":4},{"__symbolic":"reference","module":"@angular/material/button-toggle","name":"MatButtonToggleModule","line":54,"character":4},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":55,"character":4},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":56,"character":4},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":57,"character":4},{"__symbolic":"reference","module":"@angular/material/stepper","name":"MatStepperModule","line":58,"character":4},{"__symbolic":"reference","module":"@angular/material/datepicker","name":"MatDatepickerModule","line":59,"character":4},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":60,"character":4},{"__symbolic":"reference","module":"@angular/material/divider","name":"MatDividerModule","line":61,"character":4},{"__symbolic":"reference","module":"@angular/material/expansion","name":"MatExpansionModule","line":62,"character":4},{"__symbolic":"reference","module":"@angular/material/grid-list","name":"MatGridListModule","line":63,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":64,"character":4},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":65,"character":4},{"__symbolic":"reference","module":"@angular/material/list","name":"MatListModule","line":66,"character":4},{"__symbolic":"reference","module":"@angular/material/menu","name":"MatMenuModule","line":67,"character":4},{"__symbolic":"reference","module":"@angular/material/core","name":"MatNativeDateModule","line":68,"character":4},{"__symbolic":"reference","module":"@angular/material/paginator","name":"MatPaginatorModule","line":69,"character":4},{"__symbolic":"reference","module":"@angular/material/progress-bar","name":"MatProgressBarModule","line":70,"character":4},{"__symbolic":"reference","module":"@angular/material/progress-spinner","name":"MatProgressSpinnerModule","line":71,"character":4},{"__symbolic":"reference","module":"@angular/material/radio","name":"MatRadioModule","line":72,"character":4},{"__symbolic":"reference","module":"@angular/material/core","name":"MatRippleModule","line":73,"character":4},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":74,"character":4},{"__symbolic":"reference","module":"@angular/material/sidenav","name":"MatSidenavModule","line":75,"character":4},{"__symbolic":"reference","module":"@angular/material/slider","name":"MatSliderModule","line":76,"character":4},{"__symbolic":"reference","module":"@angular/material/slide-toggle","name":"MatSlideToggleModule","line":77,"character":4},{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBarModule","line":78,"character":4},{"__symbolic":"reference","module":"@angular/material/sort","name":"MatSortModule","line":79,"character":4},{"__symbolic":"reference","module":"@angular/material/table","name":"MatTableModule","line":80,"character":4},{"__symbolic":"reference","module":"@angular/material/tabs","name":"MatTabsModule","line":81,"character":4},{"__symbolic":"reference","module":"@angular/material/toolbar","name":"MatToolbarModule","line":82,"character":4},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":83,"character":4},{"__symbolic":"reference","module":"@angular/material/tree","name":"MatTreeModule","line":84,"character":4},{"__symbolic":"reference","module":"@angular/cdk/portal","name":"PortalModule","line":85,"character":4},{"__symbolic":"reference","module":"@angular/cdk/scrolling","name":"ScrollingModule","line":86,"character":4}]}]}],"members":{}}},"origins":{"ContactusService":"./lib/contactus.service","DialogData":"./lib/contactus.component","ContactusComponent":"./lib/contactus.component","successModalComponent":"./lib/contactus.component","ContactusModule":"./lib/contactus.module","Éµa":"./lib/api.service","Éµb":"./lib/contactus-listing/contactus-listing.component","Éµc":"./lib/loading/loading.component","Éµd":"./lib/material-module"},"importAs":"contactus"}
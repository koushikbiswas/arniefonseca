{"version":3,"sources":["ng://servicelib/lib/servicelib.service.ts","ng://servicelib/lib/servicelib.component.ts","ng://servicelib/lib/modules/material-module.ts","ng://servicelib/lib/Component/addedit-service/addedit-service.component.ts","ng://servicelib/lib/servicelib.module.ts"],"names":["ServicelibService","prototype","isTokenExpired","addData","endpoint","requestdata","httpOptions","headers","HttpHeaders","Content-Type","Authorization","this","accesstoken","_http","post","serverUrl","JSON","stringify","pipe","map","res","UpdateData","getData","deleteSingleData","deleteMultipleData","UpdateStatusForSingleData","UpdateStatusForMultipleData","CustomRequest","Injectable","args","providedIn","HttpClient","CookieService","_authHttp","cookieService","progress","uploaderror","get","fileservername","getdata_endpointUrl","ServicelibComponent","Object","defineProperty","receivedData","serviceListConfig","apiUrl","apiBaseUrl","listEndPoint","datasource","tableName","listArray_skip","listArray_modify_header","service title","priority","status","bulletarr","date_added","admintablenameTableName","statusarr","val","name","updateurl","updateEndpoint","editUrl","jwtToken","deleteEndPoint","view","search_settings","textsearch","label","field","selectsearch","values","pendingmodelapplicationarray_detail_datatype","key","value","fileurl","loader","ngOnInit","Component","selector","template","Input","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","AddeditServiceComponent","generateForm","configData","action","addBulletList","buttonText","flag","flag2","header_name","successMessage","setDefaultValue","defaultData","additional_img","getConfig","imageConfigData","getConfig2","imageConfigData2","serviceForm","formBuilder","group","service_title","Validators","required","description","array","service_img","defaultValue","_this","forEach","element","bullet_title","bullet_desc","patchValue","img_var","basepath","image","image_name","image_type","type","img_var2","image_name2","image_type2","a","b","controls","push","deleteBulletList","removeAt","trackByFn","index","onSubmit","files","length","ErrCode","upload","data","path","img_missing","i","markAsTouched","invalid","parseInt","postData","source","assign","condition","servicehttp","subscribe","response","openDialog","setTimeout","dialogRef","close","router","navigate","callBack","alert","error","x","dialog","open","Modal","width","msg","afterClosed","result","resetserviceForm","reset","inputBlur","markAsUntouched","clear_image","clear_image2","FormBuilder","Router","MatDialog","Editor","ClassicEditor","editorConfig","placeholder","model","editorData","img_arr","onNoClick","MatDialogRef","Inject","MAT_DIALOG_DATA","ServicelibModule","declarations","imports","HttpClientModule","RouterModule","CKEditorModule","FormsModule","ReactiveFormsModule","CommonModule","BrowserModule","ListingModule","FileUploadModule","entryComponents"],"mappings":"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","sourcesContent":["\n\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicelibService {\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken: any = this.cookieService.get('jwtToken');;\n  public fileservername: any = [];\n  public serverUrl: any = '';\n  public addendpointUrl: any;\n  public updateendpointUrl: any;\n  public deletesingle_endpointUrl: any;\n  public updatestatus_single_endpointUrl: any;\n  public deletemultiple_endpointUrl: any;\n  public updatestatus_multiple_endpointUrl: any;\n  public getdata_endpointUrl: any = 'datalist';\n\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\n\n  isTokenExpired() {\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  CustomRequest(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-servicelib',\n  templateUrl: './servicelib.component.html',\n  styleUrls: ['./servicelib.component.css']\n})\nexport class ServicelibComponent implements OnInit {\n\n  // ==============================================declaration============================================\n  public serviceListConfig: any;\n  public loader: boolean = true;\n  // =====================================================================================================\n\n\n  // =============================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n    this.serviceListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"id\", \"updated_at\", \"service_desc\", \"image\",\"additional_img\",\"description_html\"],\n      listArray_modify_header: { \"service title\": \"Service title\", \"priority\": \"Priority\", \n      \"status\": \"Status\", \"bulletarr\": \"Number of bullets\",\"date_added\":\"Date\" },\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n\n      /*Search settings in the Listing*/\n      search_settings: {\n        textsearch: [{ label: \"Search by title\", field: 'service_title' }],\n        selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }], // this is use for  select search\n      },\n\n      /*Showing Image in the Modal*/\n      pendingmodelapplicationarray_detail_datatype: [{\n        key: \"images\",\n        value: 'image',\n        fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/services/'    // Image path \n      }],\n\n    }\n    this.loader = false;\n  }\n\n  // ====================================================================================================\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { FormControl, FormGroup, FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { ServicelibService } from '../../servicelib.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  msg: string;\n}\n\n\n@Component({\n  selector: 'lib-addedit-service',\n  templateUrl: './addedit-service.component.html',\n  styleUrls: ['./addedit-service.component.css']\n})\nexport class AddeditServiceComponent implements OnInit {\n\n\n\n\n\n  /**ckeditor start here*/\n  public Editor = ClassicEditor;  //for ckeditor\n  editorConfig = {\n    placeholder: 'Write description...',\n  };\n  public model = {\n    editorData: ''\n  };\n  /**ckeditor end here*/\n\n\n\n  // ===========================================Declaration section================================\n  serviceForm: FormGroup;\n  loader: boolean = false;\n  configData: any;\n  imageConfigData: any;\n  buttonText = \"SUBMIT\";\n  successMessage: string = \"Service Added!!!\";\n  dialogRef: any;\n  img_arr: any = [];\n  ErrCode: boolean = false;\n  flag: boolean;\n  img_var: any;\n  header_name: any;\n  image_name: any;\n  image_type: any;\n  getConfig2: any;\n  imageConfigData2: any;\n  img_var2: any;\n  image_name2: any;\n  image_type2: any;\n  flag2: boolean;\n  img_missing: boolean = false;\n  // ==============================================================================================\n\n\n\n  constructor(private formBuilder: FormBuilder, private servicehttp: ServicelibService,\n    private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.loader = false;\n    this.generateForm();\n\n    if (this.configData.action != 'edit')\n      this.addBulletList('', '');\n\n\n    // =========================================SWITCH CASES==========================================\n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"SUBMIT\";\n        this.flag = false;\n        this.flag2 = false;\n        this.header_name = \"Add Service\";\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"Service Edited!!!\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_name = \"Edit Service\";\n        this.flag = true;\n        this.flag2 = true;\n        if (this.configData.defaultData.additional_img == false)\n          this.flag2 = false;\n        break;\n    }\n    // ===============================================================================================\n\n  }\n\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n  @Input()\n  set imageUpload(getConfig: any) {\n    this.imageConfigData = getConfig;\n  }\n  @Input()\n  set imageUpload2(getConfig2: any) {\n    this.imageConfigData2 = getConfig2;\n  }\n\n\n\n  // =============================================form generation====================================\n  generateForm() {\n    this.serviceForm = this.formBuilder.group({\n      service_title: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n      priority: ['', [Validators.required]],\n      status: [true,],\n      bulletarr: this.formBuilder.array([]),\n      service_img: ['',],\n      additional_img: ['',]\n    });\n  }\n  // =================================================================================================\n\n\n\n\n\n  // ===============================================Default value======================================\n  setDefaultValue(defaultValue) {\n\n    defaultValue.bulletarr.forEach(element => {\n      this.addBulletList(element.bullet_title, element.bullet_desc);\n    });\n\n    this.serviceForm.patchValue({\n      service_title: defaultValue.service_title,\n      description: defaultValue.description,\n      priority: defaultValue.priority,\n      status: defaultValue.status,\n      service_img: defaultValue.service_img,\n      additional_img: defaultValue.additional_img,\n    });\n    /** Service image **/\n    this.img_var = defaultValue.service_img.basepath + defaultValue.service_img.image;\n    this.image_name = defaultValue.service_img.name;\n    this.image_type = defaultValue.service_img.type\n\n    /** Additional image **/\n    this.img_var2 = defaultValue.additional_img.basepath + defaultValue.additional_img.image;\n    this.image_name2 = defaultValue.additional_img.name;\n    this.image_type2 = defaultValue.additional_img.type\n  }\n  // ==================================================================================================\n\n\n\n\n\n\n\n\n\n  // ==========================================FORM ARRAY FUNCTIONS===================================\n  addBulletList(a: any, b: any) {\n    const bl = this.serviceForm.controls.bulletarr as FormArray;\n    bl.push(this.formBuilder.group({\n      bullet_title: [a],\n      bullet_desc: [b],\n    }));\n  }\n\n  deleteBulletList() {\n    const bl = this.serviceForm.controls.bulletarr as FormArray;\n    bl.removeAt(1);\n  }\n\n\n  trackByFn(index) {\n    return index;\n  }\n  // ==================================================================================================\n\n\n  // ================================================SUBMIT============================================\n  onSubmit() {\n    // Service File Upload Works \n    if (this.imageConfigData.files) {\n\n      if (this.imageConfigData.files.length > 1) { this.ErrCode = true; return; }\n\n      this.serviceForm.value.service_img =\n        {\n          \"basepath\": this.imageConfigData.files[0].upload.data.basepath + '/' + this.imageConfigData.path + '/',\n          \"image\": this.imageConfigData.files[0].upload.data.data.fileservername,\n          \"name\": this.imageConfigData.files[0].name,\n          \"type\": this.imageConfigData.files[0].type\n        };\n        this.img_missing = false;\n    } else {\n      this.img_missing = true;\n    }\n\n    /** Additional Image  **/\n    if (this.imageConfigData2.files) {\n\n      if (this.imageConfigData2.files.length > 1) { this.ErrCode = true; return; }\n      this.serviceForm.value.additional_img =\n        {\n          \"basepath\": this.imageConfigData2.files[0].upload.data.basepath + '/' + this.imageConfigData2.path + '/',\n          \"image\": this.imageConfigData2.files[0].upload.data.data.fileservername,\n          \"name\": this.imageConfigData2.files[0].name,\n          \"type\": this.imageConfigData2.files[0].type\n        };\n    }\n\n\n    for (let i in this.serviceForm.controls) {\n      this.serviceForm.controls[i].markAsTouched();\n    }\n\n    this.loader = true;\n     if(this.img_missing==true){return;}\n    if (this.serviceForm.invalid) {\n      return;\n    } else {\n      if (this.serviceForm.value.status) {\n        this.serviceForm.value.status = parseInt(\"1\");\n      } else {\n        this.serviceForm.value.status = parseInt(\"0\");;\n      }\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.serviceForm.value, this.configData.condition)\n      };\n      this.servicehttp.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try again.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try again.\");\n      });\n    }\n\n  }\n  // ================================================================================================== \n\n\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal, {\n      width: '250px',\n      data: { msg: x }\n    });\n    this.dialogRef.afterClosed().subscribe(result => {\n    });\n  }\n  // =================================================================================================\n\n\n\n  resetserviceForm() {\n    this.serviceForm.reset();\n  }\n\n  inputBlur(val: any) {\n    this.serviceForm.controls[val].markAsUntouched();\n  }\n\n  // ================================================================================================\n  clear_image() {\n    this.flag = false;\n    this.img_missing = true;\n  }\n\n  clear_image2() {\n    this.flag2 = false;\n    this.serviceForm.value.additional_img = false;\n  }\n  // ================================================================================================\n}\n\n\n\n\n\n\n\n\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n","import { NgModule } from '@angular/core';\nimport { ServicelibComponent } from './servicelib.component';\nimport { DemoMaterialModule } from './modules/material-module';\nimport { AddeditServiceComponent ,Modal} from './Component/addedit-service/addedit-service.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { ReactiveFormsModule , FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ListingModule } from 'listing-angular7';\nimport { FileUploadModule } from 'file-upload';\n\n@NgModule({\n  declarations: [ServicelibComponent,AddeditServiceComponent,Modal],\n  imports: [\n    DemoMaterialModule,\n    HttpClientModule,\n    RouterModule,\n    CKEditorModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    BrowserModule,\n    ListingModule,\n    FileUploadModule\n  ],\n  exports: [ServicelibComponent,AddeditServiceComponent,Modal],\n  entryComponents:[Modal]\n})\nexport class ServicelibModule { }\n"]}
{"version":3,"file":"testimonial.umd.js.map","sources":["ng://testimonial/lib/testimonial.service.ts","ng://testimonial/lib/testimonial.component.ts","ng://testimonial/lib/Components/addedit/addedit.component.ts","ng://testimonial/lib/Modules/material-module.ts","ng://testimonial/lib/testimonial.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestimonialService {\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken: any = this.cookieService.get('jwtToken');;\n  public fileservername: any = [];\n  public serverUrl: any = '';\n  public addendpointUrl: any;\n  public updateendpointUrl: any;\n  public deletesingle_endpointUrl: any;\n  public updatestatus_single_endpointUrl: any;\n  public deletemultiple_endpointUrl: any;\n  public updatestatus_multiple_endpointUrl: any;\n  public getdata_endpointUrl: any = 'datalist';\n\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\n\n  isTokenExpired() {\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  CustomRequest(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\n\n\n@Component({\n  selector: 'lib-testimonial',\n  templateUrl: 'testimonial.component.html',\n  styleUrls: ['testimonial.component.css']\n})\nexport class TestimonialComponent implements OnInit {\n\n  // ==============================================declaration============================================\n  public testimonialListConfig: any;\n  public loader: boolean = true;\n  // =====================================================================================================\n\n\n\n\n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n   \n    this.testimonialListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\",\"image\"],\n      listArray_modify_header: { \"name\": \"Customer/User Name\", \"email\": \"Customer/User Email\", \"testimonial\": \"Testimonial\", \"priority\": \"Priority\", \"status\": \"Status\" },\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      search_settings:{\n        textsearch: [{ label: \"customer name...\", field: 'name' },{ label: \"customer email...\", field: 'email' }],\n        selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\n      },\n       /*Showing Image in the Modal*/\n       pendingmodelapplicationarray_detail_datatype: [{\n        key: \"image\",\n        value: 'image',\n        fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \n      }],\n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms'\nimport { TestimonialService } from '../../testimonial.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  msg: string;\n}\n\n\n@Component({\n  selector: 'lib-addedit',\n  templateUrl: './addedit.component.html',\n  styleUrls: ['./addedit.component.css']\n})\nexport class AddeditComponent implements OnInit {\n\n\n  /**ckeditor start here*/\n  public Editor = ClassicEditor;  //for ckeditor\n  editorConfig = {\n    placeholder: 'Write testimonial...',\n  };\n  public model = {\n    editorData: ''\n  };\n  /**ckeditor end here*/\n\n\n  //  ========================================Declaration Section======================================\n  buttonText = \"SUBMIT\";\n  testimonialForm: FormGroup;\n  public loader: boolean = false;\n  configData;\n  successMessage: string = \"Submitted Successfully\";\n  dialogRef: any;\n  imageConfigData:any;\n  ErrCode:boolean = false;\n  flag: boolean;\n  img_var: any;\n  header_name: any;\n  image_name: any;\n  image_type: any;\n  // ==================================================================================================\n\n\n  constructor(private formBuilder: FormBuilder, private testiService: TestimonialService,\n    private router: Router, public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.loader = false;\n    this.generateForm();\n    // --------------------------------checking the cases------------------------ \n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"SUBMIT\";\n        this.flag = false;\n        this.header_name = \"Add Testimonial\";\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"One row updated\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_name = \"EDIT\";\n        this.flag = true;\n        break;\n    }\n    // --------------------------------------------------------------------------\n\n  }\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n  @Input()\n  set imageUpload(getConfig: any) {\n    this.imageConfigData = getConfig;\n  }\n\n  // =====================================Form Validation/generation===================================\n  generateForm() {\n    this.testimonialForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required,Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/\n      )]],\n      testimonial: ['', [Validators.required]],\n      priority: ['', Validators.required],\n      status: [true,],\n      testimonial_img : ['',],\n      userId: [this.configData.userData.id, null]\n    })\n    \n  }\n  // =================================================================================================\n\n\n\n  // ==========================================SUBMIT=================================================\n\n\n  onSubmit() {\n    // Testimonial File Upload Works \n    if (this.imageConfigData.files) {\n            \n      if (this.imageConfigData.files.length > 1) { this.ErrCode = true; return; }\n      this.testimonialForm.value.testimonial_img =\n        {\n          \"basepath\": this.imageConfigData.files[0].upload.data.basepath + '/' + this.imageConfigData.path + '/',\n          \"image\": this.imageConfigData.files[0].upload.data.data.fileservername,\n          \"name\": this.imageConfigData.files[0].name,\n          \"type\": this.imageConfigData.files[0].type\n        };\n    } else {\n      this.testimonialForm.value.testimonial_img = false;\n    }\n\n\n     this.testimonialForm.controls['testimonial'].markAsTouched();\n    this.loader = true;\n    /* stop here if form is invalid */\n    if (this.testimonialForm.invalid) {\n      return;\n    } else {\n      if (this.testimonialForm.value.status) {\n        this.testimonialForm.value.status = parseInt(\"1\");\n      } else {\n        this.testimonialForm.value.status = parseInt(\"0\");;\n      }\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.testimonialForm.value, this.configData.condition)\n      };\n      this.testiService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try angain.\");\n      });\n    }\n  }\n  // =================================================================================================\n\n\n\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    this.testimonialForm.patchValue({\n      name: defaultValue.name,\n      email: defaultValue.email,\n      testimonial: defaultValue.testimonial,\n      priority: defaultValue.priority,\n      status: defaultValue.status,\n      userId: null,\n      testimonial_img: defaultValue.testimonial_img\n    });\n    this.img_var = defaultValue.testimonial_img.basepath + defaultValue.testimonial_img.image;\n    this.image_name = defaultValue.testimonial_img.name;\n    this.image_type = defaultValue.testimonial_img.type\n  }\n  // ==================================================================================================\n\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // =====================================================================================================\n\n\n  inputBlur(val: any) {\n    this.testimonialForm.controls[val].markAsUntouched();\n  }\n// ==========================================Clear MAT tag===================================\n  clear_image() {\n    this.flag = false;\n  }\n  // ========================================================================================\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n//import { MatFileUploadModule } from 'angular-material-fileupload';\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    //MatFileUploadModule\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import { NgModule } from '@angular/core';\nimport { TestimonialComponent } from './testimonial.component';\nimport { AddeditComponent , Modal } from './Components/addedit/addedit.component';\nimport { DemoMaterialModule } from './Modules/material-module';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ListingModule } from 'listing-angular7';\nimport { FileUploadModule } from 'file-upload';\n\n@NgModule({\n  declarations: [TestimonialComponent, AddeditComponent ,Modal],\n  imports: [\n    DemoMaterialModule,\n    CKEditorModule,\n    HttpClientModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    BrowserModule,\n    ListingModule,\n    FileUploadModule\n  ],\n  exports: [TestimonialComponent,AddeditComponent] ,\n  entryComponents:[Modal ]\n})\nexport class TestimonialModule { }\n"],"names":["HttpHeaders","map","Injectable","HttpClient","CookieService","Component","Input","router","dialog","Validators","FormBuilder","Router","MatDialog","MatDialogRef","Inject","MAT_DIALOG_DATA","NgModule","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","CKEditorModule","HttpClientModule","RouterModule","FormsModule","ReactiveFormsModule","CommonModule","BrowserModule","ListingModule","FileUploadModule"],"mappings":"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"}
